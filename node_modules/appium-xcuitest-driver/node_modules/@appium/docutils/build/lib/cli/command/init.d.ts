import { CommandModule, InferredOptionTypes } from 'yargs';
declare const _default: CommandModule<{}, InferredOptionTypes<Readonly<{
    copyright: {
        description: string;
        group: string;
        nargs: number;
        requiresArg: true;
        type: "string";
    };
    dir: {
        default: string;
        defaultDescription: string;
        description: string;
        group: string;
        normalize: true;
        type: "string";
    };
    'dry-run': {
        describe: string;
        group: string;
        type: "boolean";
    };
    force: {
        alias: string;
        describe: string;
        group: string;
        type: "boolean";
    };
    include: {
        alias: string;
        array: true;
        coerce: (value: string | string[]) => string[];
        description: string;
        nargs: number;
        requiresArg: true;
        type: "string";
    };
    mkdocs: {
        default: boolean;
        description: string;
        group: string;
        type: "boolean";
    };
    'mkdocs-yml': {
        defaultDescription: string;
        description: string;
        group: string;
        nargs: number;
        normalize: true;
        requiresArg: true;
        type: "string";
    };
    'package-json': {
        defaultDescription: string;
        describe: string;
        group: string;
        nargs: number;
        normalize: true;
        requiresArg: true;
        type: "string";
    };
    python: {
        default: boolean;
        description: string;
        group: string;
        type: "boolean";
    };
    'python-path': {
        defaultDescription: string;
        description: string;
        group: string;
        nargs: number;
        normalize: true;
        requiresArg: true;
        type: "string";
    };
    'repo-name': {
        defaultDescription: string;
        description: string;
        group: string;
        nargs: number;
        requiresArg: true;
        type: "string";
    };
    'repo-url': {
        defaultDescription: string;
        description: string;
        group: string;
        nargs: number;
        requiresArg: true;
        type: "string";
    };
    'site-description': {
        defaultDescription: string;
        description: string;
        group: string;
        nargs: number;
        requiresArg: true;
        type: "string";
    };
    'site-name': {
        defaultDescription: string;
        description: string;
        group: string;
        nargs: number;
        requiresArg: true;
        type: "string";
    };
    'tsconfig-json': {
        defaultDescription: string;
        describe: string;
        group: string;
        nargs: number;
        normalize: true;
        requiresArg: true;
        type: "string";
    };
    typedoc: {
        default: boolean;
        description: string;
        group: string;
        type: "boolean";
    };
    'typedoc-json': {
        defaultDescription: string;
        describe: string;
        group: string;
        nargs: number;
        normalize: true;
        requiresArg: true;
        type: "string";
    };
    typescript: {
        default: boolean;
        description: string;
        group: string;
        type: "boolean";
    };
}>>>;
export default _default;
//# sourceMappingURL=init.d.ts.map